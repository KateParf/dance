// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tanez;

#nullable disable

namespace tanez.Migrations
{
    [DbContext(typeof(DanceContext))]
    [Migration("20240321165328_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("tanez.Models.Dance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ChangePartner")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountOfPairs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpochId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LevelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Scheme")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpochId");

                    b.HasIndex("LevelId");

                    b.HasIndex("TypeId");

                    b.ToTable("Dances");
                });

            modelBuilder.Entity("tanez.Models.DanceEpoch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DanceEpochs");
                });

            modelBuilder.Entity("tanez.Models.DanceLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DanceLevel");
                });

            modelBuilder.Entity("tanez.Models.DanceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DanceType");
                });

            modelBuilder.Entity("tanez.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("tanez.Models.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DanceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DanceId");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("tanez.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DanceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MoveId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DanceId");

                    b.HasIndex("MoveId");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("tanez.Models.Dance", b =>
                {
                    b.HasOne("tanez.Models.DanceEpoch", "Epoch")
                        .WithMany()
                        .HasForeignKey("EpochId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tanez.Models.DanceLevel", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tanez.Models.DanceType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Epoch");

                    b.Navigation("Level");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("tanez.Models.Music", b =>
                {
                    b.HasOne("tanez.Models.Dance", null)
                        .WithMany("Music")
                        .HasForeignKey("DanceId");
                });

            modelBuilder.Entity("tanez.Models.Video", b =>
                {
                    b.HasOne("tanez.Models.Dance", null)
                        .WithMany("Videos")
                        .HasForeignKey("DanceId");

                    b.HasOne("tanez.Models.Move", null)
                        .WithMany("Videos")
                        .HasForeignKey("MoveId");
                });

            modelBuilder.Entity("tanez.Models.Dance", b =>
                {
                    b.Navigation("Music");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("tanez.Models.Move", b =>
                {
                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
